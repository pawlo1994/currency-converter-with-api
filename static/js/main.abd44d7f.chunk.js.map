{"version":3,"sources":["Header/styled.js","Header/index.js","Main/styled.js","Main/index.js","Footer/styled.js","Footer/index.js","Form/styled.js","Form/List/styled.js","Form/List/index.js","Form/index.js","Clock/styled.js","Clock/index.js","Clock/useCurrentDate.js","Container/styled.js","Container/index.js","theme.js","App.js","reportWebVitals.js","index.js"],"names":["StyledHeader","styled","header","StyledTitle","h1","Header","headerContent","StyledMain","main","Main","children","StyledFooter","footer","Footer","footerContent","StyledForm","form","StyledLabel","label","StyledInput","input","StyledField","p","StyledButton","button","theme","color","mineShaft","mainColor","h2","StyledList","section","StyledParagraph","List","plnValue","result","updateDate","sourceValue","toFixed","value","currencyName","Form","useState","setUpdateDate","setSourceValue","names","setNames","values","setValues","setPlnValue","userValue","setUserValue","setCurrencyName","rate","findIndex","name","setResult","useEffect","fetch","then","response","json","currency","setTimeout","Object","keys","rates","date","base","catch","error","console","onSubmit","event","preventDefault","calculateResult","htmlFor","type","onChange","target","id","step","min","max","required","as","map","StyledClock","Clock","dateContent","Date","setDate","intervalId","setInterval","clearInterval","useCurrentDate","toLocaleString","undefined","weekday","day","month","hour","minute","second","StyledContainer","div","Container","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.abd44d7f.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const StyledHeader = styled.header`\r\n    margin: 20px auto;\r\n    background-color: rgb(140, 178, 197);\r\n    border-radius: 10px;\r\n    box-shadow: 1px 1px 3px 3px #333;\r\n`;\r\n\r\nexport const StyledTitle = styled.h1`\r\n    font-size: 36px;\r\n    text-align: center;\r\n    text-transform: uppercase;\r\n    padding: 10px;\r\n`;","import { StyledHeader, StyledTitle } from \"./styled\";\r\n\r\nconst Header = ({ headerContent }) => (\r\n    <StyledHeader>\r\n        <StyledTitle>{headerContent}</StyledTitle>\r\n    </StyledHeader>\r\n);\r\n\r\nexport default Header;","import styled from \"styled-components\";\r\n\r\nexport const StyledMain = styled.main`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin: 10px auto;\r\n    padding: 20px 0;\r\n`;","import { StyledMain } from \"./styled\";\r\n\r\nconst Main = ({ children }) => (\r\n    <StyledMain>\r\n        {children}\r\n    </StyledMain>\r\n);\r\n\r\nexport default Main;","import styled from \"styled-components\";\r\n\r\nexport const StyledFooter = styled.footer`\r\n    text-align: center;\r\n    background-color: rgb(96, 153, 182);\r\n    font-size: 14px;\r\n    padding: 10px;\r\n    border-radius: 10px;\r\n    box-shadow: 1px 1px 3px 3px #333;\r\n    margin: 0 auto;\r\n`;","import { StyledFooter } from \"./styled\";\r\n\r\nconst Footer = ({ footerContent }) => (\r\n    <StyledFooter>\r\n        {footerContent}\r\n    </StyledFooter>\r\n);\r\n\r\nexport default Footer;","import styled from \"styled-components\";\r\n\r\nexport const StyledForm = styled.form`\r\n    padding: 20px;\r\n    border-radius: 10px;\r\n    flex-basis: 50%;\r\n    background-color: #eee;\r\n    box-shadow: 0 0 2px 2px #666;\r\n\r\n    @media(max-width:767px){\r\n        flex-basis: 100%;\r\n    }\r\n`;\r\n\r\nexport const StyledLabel = styled.label`\r\n    display: inline-block;\r\n    width: 30%;\r\n    margin: 10px 5px;\r\n    text-align: right;\r\n`;\r\n\r\nexport const StyledInput = styled.input`\r\n    display: inline-block;\r\n    width: 60%;\r\n    padding: 5px;\r\n    border-radius: 5px;\r\n\r\n    &:invalid{\r\n        box-shadow: 0px 0px 2px 2px #c00;\r\n    }\r\n`;\r\n\r\nexport const StyledField = styled.p`\r\n    margin: 5px auto;\r\n    max-width: 360px;\r\n    width: 100%;\r\n`;\r\n\r\nexport const StyledButton = styled.button`\r\n    display: block;\r\n    font-size: 20px;\r\n    width: 100px;\r\n    padding: 10px;\r\n    margin: 10px auto;\r\n    background-color: ${({ theme }) => theme.color.mineShaft};\r\n    color: #fff;\r\n    border: none;\r\n    border-radius: 10px;\r\n    box-shadow: 1px 1px 1px 1px #666;\r\n    cursor: pointer;\r\n    transition: 0.3s background-color;\r\n\r\n    &:hover{\r\n        background-color: #666;\r\n    }\r\n\r\n    &:active{\r\n        background-color: #fff;\r\n        color: ${({ theme }) => theme.mainColor};\r\n    }\r\n`;\r\n\r\nexport const StyledHeader = styled.h2`\r\n    font-size: 28px;\r\n    text-align: center;\r\n    text-shadow: 0px 2px 2px #aaa;\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const StyledList = styled.section`\r\n    padding: 20px;\r\n    background-color: rgb(240, 240, 240);\r\n    border-radius: 10px;\r\n    box-shadow: 0 0 2px 2px #999;\r\n    list-style-type: none;\r\n    flex-basis: 45%;\r\n\r\n    @media(max-width: 767px){\r\n        margin-top: 10px;\r\n        flex-basis: 100%;\r\n    }\r\n`;\r\n\r\nexport const StyledHeader = styled.h2`\r\n    text-align: center;\r\n`;\r\n\r\nexport const StyledParagraph = styled.p`\r\n    text-align: center;\r\n    font-size: 20px;\r\n`;","import { StyledHeader, StyledList, StyledParagraph } from \"./styled\";\r\n\r\nconst List = ({ plnValue, result, updateDate, sourceValue }) => {\r\n    if (!result) {\r\n        return (\r\n            <StyledList>\r\n                <StyledHeader>Data aktualizacji: {updateDate}</StyledHeader>\r\n            </StyledList>\r\n        )\r\n    }\r\n    return (\r\n        <StyledList>\r\n            <StyledHeader>Data aktualizacji: {updateDate}</StyledHeader>\r\n            <StyledParagraph>\r\n                {(+plnValue).toFixed(2)} {sourceValue} = {(+result.value).toFixed(2)} {result.currencyName}\r\n            </StyledParagraph>\r\n        </StyledList>\r\n    );\r\n};\r\n\r\nexport default List;","import { StyledForm, StyledLabel, StyledInput, StyledField, StyledButton, StyledHeader } from \"./styled\";\r\nimport { useEffect, useState } from \"react\";\r\nimport List from \"./List\";\r\n\r\nconst Form = () => {\r\n    const [updateDate, setUpdateDate] = useState(\"\");\r\n    const [sourceValue, setSourceValue] = useState(\"\");\r\n    const [names, setNames] = useState([]);\r\n    const [values, setValues] = useState([]);\r\n    const [plnValue, setPlnValue] = useState(\"\");\r\n    const [userValue, setUserValue] = useState(\"\");\r\n    const [currencyName, setCurrencyName] = useState(names[0]);\r\n\r\n    const currencyNameIndex = names.findIndex(name => name === currencyName);\r\n    const rate = values[currencyNameIndex];\r\n\r\n    const [result, setResult] = useState(\"\");\r\n\r\n    const calculateResult = (currencyName, rate) => {\r\n        setResult(\r\n            {\r\n                value: userValue * rate,\r\n                currencyName\r\n            }\r\n        );\r\n    };\r\n\r\n    const onFormSubmit = event => {\r\n        event.preventDefault();\r\n        setPlnValue((+userValue).toFixed(2));\r\n        calculateResult(currencyName, rate);\r\n        setUserValue(\"\");\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetch(\"https://api.exchangerate.host/latest?base=PLN\")\r\n            .then(response => response.json())\r\n            .then(currency => {\r\n                setTimeout(() => {\r\n                    setNames(Object.keys(currency.rates));\r\n                    setValues(Object.values(currency.rates));\r\n                    setUpdateDate(currency.date);\r\n                    setSourceValue(currency.base);\r\n                }, 1000);\r\n            }\r\n            )\r\n            .catch(error => {\r\n                console.error(\"Nie udało się pobrać danych...\", error)\r\n            })\r\n    }, []);\r\n\r\n    if (!updateDate) {\r\n        return (<StyledHeader>Pobieranie danych z serwera, proszę czekać...</StyledHeader>)\r\n    }\r\n    return (\r\n        <>\r\n            <StyledForm\r\n                onSubmit={onFormSubmit}\r\n            >\r\n                <StyledHeader>Przelicznik walut</StyledHeader>\r\n                Pola oznaczone \"*\" są wymagane\r\n                <StyledField>\r\n                    <StyledLabel htmlFor=\"pln\">PLN*:</StyledLabel>\r\n                    <StyledInput\r\n                        type=\"number\"\r\n                        value={userValue}\r\n                        onChange={({ target }) => setUserValue(target.value)}\r\n                        name=\"pln\"\r\n                        id=\"pln\"\r\n                        step=\"0.01\"\r\n                        min=\"0.05\"\r\n                        max=\"9999999999\"\r\n                        required\r\n                    />\r\n                    <StyledLabel htmlFor=\"currency\">Waluta:</StyledLabel>\r\n                    <StyledInput\r\n                        as=\"select\"\r\n                        onChange={\r\n                            ({ target }) => {\r\n                                setCurrencyName(target.value);\r\n                            }\r\n                        }\r\n                    >\r\n                        {names.map((rate, id) => {\r\n                            return (\r\n                                <option\r\n                                    key={id}\r\n                                    value={rate}>\r\n                                    {rate}\r\n                                </option>\r\n                            )\r\n                        })}\r\n                    </StyledInput>\r\n                </StyledField>\r\n                <StyledButton>Przelicz</StyledButton>\r\n            </StyledForm>\r\n            <List\r\n                plnValue={plnValue}\r\n                sourceValue={sourceValue}\r\n                result={result}\r\n                updateDate={updateDate}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Form;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledClock = styled.p`\r\n    font-size: 14px;\r\n    font-family: 'PT mono', monospace;\r\n    margin: 0 auto;\r\n    padding: 5px 10px;\r\n    text-align: right;\r\n\r\n    @media(max-width: 280px)\r\n    {\r\n        font-size: 12px;\r\n    }\r\n`;","import { StyledClock } from \"./styled\";\r\nimport { useCurrentDate } from \"./useCurrentDate\";\r\n\r\nconst Clock = () => {\r\n    const date = useCurrentDate();\r\n    const dateContent = date.toLocaleString(undefined, {\r\n        weekday: \"long\",\r\n        day: \"numeric\",\r\n        month: \"long\",\r\n        hour: \"2-digit\",\r\n        minute: \"2-digit\",\r\n        second: \"2-digit\"\r\n    });\r\n\r\n\r\n    return (\r\n        <StyledClock>\r\n            Dzisiaj jest {dateContent}\r\n        </StyledClock>)\r\n};\r\n\r\nexport default Clock;","import { useEffect, useState } from \"react\";\r\n\r\nexport const useCurrentDate = () => {\r\n    const [date, setDate] = useState(new Date());\r\n    useEffect(() => {\r\n        const intervalId = setInterval(() => {\r\n            setDate(new Date());\r\n        }, 1000);\r\n\r\n        return () => {\r\n            clearInterval(intervalId);\r\n        };\r\n    });\r\n\r\n    return date;\r\n}","import styled from \"styled-components\";\r\n\r\nexport const StyledContainer = styled.div`\r\n    max-width: 1024px;\r\n    margin: 0 auto; \r\n`;","import { StyledContainer } from \"./styled\";\r\n\r\nconst Container = ({ children }) => (\r\n    <StyledContainer>\r\n        {children}\r\n    </StyledContainer>\r\n);\r\n\r\nexport default Container;","export const theme = {\r\n    color: {\r\n        mineShaft: \"rgba(50, 50, 50, 0.9)\",\r\n    }\r\n};","import Header from \"./Header\";\r\nimport Main from \"./Main\";\r\nimport Footer from \"./Footer\";\r\nimport Form from \"./Form\";\r\nimport Clock from \"./Clock\";\r\nimport Container from \"./Container\";\r\nimport { theme } from \"./theme\";\r\nimport { ThemeProvider } from \"styled-components\";\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Container>\r\n        <Header headerContent=\"suchy kantor\" />\r\n        <Clock />\r\n        <Main>\r\n          <Form />\r\n        </Main>\r\n        <Footer footerContent=\"Copyright &copy; Paweł Suchy 2021\" />\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}